/*
 * Copyright (C) 2014-2025 Philip Helger (www.helger.com)
 * philip[at]helger[dot]com
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *         http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
package com.helger.maven.dirindex;

import java.io.File;

import javax.annotation.Nonnegative;
import javax.annotation.Nonnull;

import com.helger.annotation.Nonempty;
import com.helger.base.state.ESuccess;
import com.helger.xml.microdom.IMicroDocument;
import com.helger.xml.microdom.IMicroElement;
import com.helger.xml.microdom.MicroDocument;
import com.helger.xml.microdom.serialize.MicroWriter;

/**
 * {@link IOutputDataCreator} implementation for XML.
 *
 * @author Philip Helger
 */
public class OutputDataCreatorXML implements IOutputDataCreator
{
  private IMicroDocument m_aDoc;
  private IMicroElement m_eRoot;

  public void init (@Nonnull @Nonempty final String sSourceDirectory)
  {
    m_aDoc = new MicroDocument ();
    m_aDoc.addComment ("This file was automatically generated by ph-dirindex-maven-plugin. Please do NOT edit!");

    m_eRoot = m_aDoc.addElement ("index");
    m_eRoot.setAttribute ("sourcedirectory", sSourceDirectory);
  }

  public void addDirectory (@Nonnull @Nonempty final String sDirectoryName,
                            @Nonnull @Nonempty final String sBaseName,
                            @Nonnegative final int nSubDirCount,
                            @Nonnegative final int nFileCount)
  {
    final IMicroElement eDir = m_eRoot.addElement ("directory");
    eDir.setAttribute ("name", sDirectoryName);
    eDir.setAttribute ("basename", sBaseName);
    eDir.setAttribute ("subdircount", nSubDirCount);
    eDir.setAttribute ("filecount", nFileCount);
  }

  public void addFile (@Nonnull @Nonempty final String sFileName,
                       @Nonnull @Nonempty final String sBaseName,
                       @Nonnegative final long nFileSize)
  {
    final IMicroElement eFile = m_eRoot.addElement ("file");
    eFile.setAttribute ("name", sFileName);
    eFile.setAttribute ("basename", sBaseName);
    eFile.setAttribute ("filesize", nFileSize);
  }

  public void addFinalSums (@Nonnegative final int nTotalDirs, @Nonnegative final int nTotalFiles)
  {
    m_eRoot.setAttribute ("totaldirs", nTotalDirs);
    m_eRoot.setAttribute ("totalfiles", nTotalFiles);
  }

  @Nonnull
  public ESuccess writeToFile (@Nonnull final File aTarget)
  {
    return MicroWriter.writeToFile (m_aDoc, aTarget);
  }
}
